using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.Json.Serialization;
using System.Threading.Tasks;
using System.Xml;

namespace AdventOfCode
{
    public class D6
    {
        public char[,] m_Map;
        public int m_n;
        public (int, int) m_start;
        public D6()
        {
            int n = 0;
            string str = "..........#....#..........#......#.......................#...#..........................................#.........................\r\n...................#.........#......#.....#.......................#......................#...#....................................\r\n...........#..#....................................................#..........................#................#......#...........\r\n.....#.#...........................................................................#..........#................#..................\r\n...#..........................................#...........................#....................#..#.........#.....................\r\n...........#.#...#..........#...............#..................#.............#...................................#............#...\r\n......................................................................................................................#..#......#.\r\n....................#..........#.........#.....#.......#....#........................................#..#..........#...........#..\r\n....................#......#...................................................#............................................#.....\r\n..................................................#.........................#...........................#...............#.........\r\n#....#....#..................#.........#..#...................#.........#....#.....#.#........................................#...\r\n...........................................#..............................................................#.......................\r\n#...............................................................................................#...............#...........##....\r\n...#......#.............#...............#.....#........................................#.#........#...........#...#...............\r\n#........#......#............................#.......................#............#...........................#...................\r\n............#................................................#....................................................#...............\r\n.......#.................#......................#.....................#..........#................................................\r\n.......................................................................................#.....#......#.............................\r\n...........................#..#....#.......................#.............................................#...#......#.............\r\n........#........##...#.....................................................#...........................................#.#.......\r\n...............................#.........#......................#...........#..........#.....#...........#.#.................#....\r\n..#.#.............#................................................................................#..................#...........\r\n.....................#.................#............................................#...................#...................#.#.#.\r\n........#...........................................................................................#............##...............\r\n........................................................#........................................................##...............\r\n..#........#.................#...............#......#..........................................#................#.................\r\n..................#......#.............................#.............................#.....................#...#........#........#\r\n....................................#.#.........#..#...............#...............#..............................................\r\n...##..................................................................#....#..............#.#...............................#....\r\n...........#....#...#........#..............................................#.......#.............................................\r\n.................................#.............................#...................................................#..............\r\n..........#.............................#.....#...............#..........................................##...............#.......\r\n...........................................#......##...............#..............#.............................#...#............#\r\n.#.#.....................#........#........................................................#..........#.........#.................\r\n.............#.......................................##..........#.#..........................................................#...\r\n.............#....................................................................................................................\r\n..................##.....#......#........................#......................#........#........................................\r\n.........................................................................................#.....#............#....................#\r\n.#...........#....................................#.#.....................................................#......#...#............\r\n#.#...#....................................................................................#............................##.......#\r\n...#...............#................#...#...#.......................#................................#.#....#.....................\r\n................................#........................................#...................#....................................\r\n...#..#.........#......#......................#..#.....................#..........................................................\r\n.................................................................#.......#........................................#...............\r\n..................................##.......................##........................................#............................\r\n....#....#.............#........................................................#....#.......#....................#..............#\r\n.........##.............................................................#..#.#.....#...........##.................................\r\n....#.........................................#......#.......................#....#..............................#...........#....\r\n.##.....#...........................#........#...................................................#....#...........................\r\n...........................................................#.....#.#...................#......................#......#............\r\n....#............#......................................................#.......#............................................#....\r\n#.......................#..........#.#............................#........#..................................................#...\r\n#....................#.....#......................................................#....................................#.....#....\r\n...#.....#.....#.................#...........#...............................................#....................................\r\n...........................#..........................#............#............#...........................................#.....\r\n.......#.....#..........#........#...................................................................................#........#...\r\n#.....................................#......................................#.............................#......#...............\r\n#.....#....................#.........................................................#................#...........................\r\n.........................................................#....#............#..##.....................#............................\r\n...#..............#.................................#.......#...................................................................#.\r\n............................#........#...........#.......................#.......................#..........#..........#..........\r\n....#..............#.............................................................................#.........#.....#...........#....\r\n..........#................#.........................................#.#..#......................................#...#............\r\n............#...............................................................................................#.#.......#......#..#.\r\n.#................................#...............#.........................#............................................#........\r\n....................................................#.......................#........#........................#.................#.\r\n..###...............#...............#..........................................#.............#...............#..#.#...............\r\n..#...#.......................................#...................................................................#...#...........\r\n..........#..........#..#......#.............................................#......#..................#...................#.....#\r\n.......#.....#.......#.......#.....................................................................................#..........#.#.\r\n#........................#..#......................................................#......#...........#................##.........\r\n....#.....................#...........................................................................#...........................\r\n.......................#..........................#.............................................................................#.\r\n.........#..............#...................#................#.........................#..........#...............................\r\n.........#...........................................................#................................................#......#....\r\n.................#.....#................#.............................................................#...................#......#\r\n....................#.....................................................#...................................................#...\r\n............##.................#...................#................#.......................................................#.....\r\n.........................#............#.#..........................................................................#........#.....\r\n............#.........#........................#..............................................##....#.......................#.....\r\n......#...................................................#..##................^......#...#.......................................\r\n............#.....................................................#..............#.##.....#...............................##......\r\n....................#...................#......#......#......................................................#.....#...#..........\r\n..........................................................................#....#..........#........#..............................\r\n.#.................................................#..............................................................................\r\n.......................#.............................................................#.....#..................#.................#.\r\n...#...............#.#................................#..............................#.....#..#.....#..........#...............#..\r\n...........................................#.............#................................................................#.......\r\n#..............#................................................................................................................#.\r\n..................................#.#................##..............#......#..................#......................#...........\r\n..........#...................................#..................................................#................#............#..\r\n....#.....................#......................#.....#.........#........#................#....#.................................\r\n................................................#......................#.....#....................................................\r\n......#.....#.........................#..........................................................................................#\r\n............................................#..............#.................................#......................#.............\r\n...#......#................................#...............#................................................#.....#...............\r\n#...............#.........................#.#..........................................................#......................#...\r\n..#........#......................#.........#............#...###.........#....................................................#...\r\n............#.....................#........................................#..............#.........#........#....................\r\n...#....#...........................................#.................#...............#.........................#.................\r\n......#........................#..................................................................................................\r\n...#..........................................#....................................................#...........#....##.#.........#\r\n....................#..........................#....#..#...........................................................#..............\r\n.....#...........#.........................#...............#..........................................#..#.#.....................#\r\n................#.......#......#.............................................................#...#................................\r\n...........#....#........##.....................#.....#.....#.....#.........................................................#.....\r\n.#.#.........................#...#......#................................#.......##......#..........#...#..........##.............\r\n...................#...................#......#............................................#...........#.......................#..\r\n..............#.#.................................#.....................................................................#.........\r\n......#............#...................................##....................................#...................#.#..............\r\n......................#.............................#....................................................#...............#........\r\n..........................#.......................................................................#.......##...#..................\r\n...................................................#..............#...#.............#.................#..........#.#....#.........\r\n...#......#....................#..................................................................#...............#......#........\r\n....#......#.#.........#..#..#......#.....................................................#.................#.....#...............\r\n......#..........#............#..............#.......#..................................#.........................................\r\n.##.#.........................#..#.............#..........#.........................................................#.............\r\n.....#..#......................##...........#........................#..#.............................................#...........\r\n.....#...............................#................#...........................................................................\r\n.##....#...................#............#....................................#..............##.............#................##....\r\n....................#......##..............................#...#.................#...............##...#............#..............\r\n.................#...........................#.....................................#.#........#...........#.........#....##.......\r\n......#.............................##....................#......................................................................#\r\n...........#........##...#......#...........#................#.....................................................#..............\r\n......#.#.................................#...........................................................#...#......#........#.#....#\r\n...........#......#....#...............#.......#................#.....................#...........................................\r\n....#......#............................##.#...............##.#..........#.........#........#.................................#...\r\n.#............................#................................#.#..............................................#.....#........#..\r\n.#.#.......#.......#.....................................................................#..............#.................##......\r\n.....#.......................................#.......#........#..............#.........#................#...#...#.................";
            //string str = "....#.....\r\n.........#\r\n..........\r\n..#.......\r\n.......#..\r\n..........\r\n.#..^.....\r\n........#.\r\n#.........\r\n......#...";
            bool Found = false;
            for(int i = 0; i < str.Length && Found == false; i++)
            {
                if (str[i] == '\r')
                {
                    n = i;
                    Found = true;
                }
            }
            char[,] map = new char[n, n];
            int aux1 = 0;
            int aux2 = 0;
            for (int i = 0; i < str.Length; i++)
            {
                if (str[i] == '\r')
                {
                    aux1++;
                    aux2 = 0;
                }
                else if (str[i] == '\n')
                {

                }
                else
                {
                    map[aux2,n-1-aux1] = str[i];
                    aux2++;
                }
            }
            string lastline = ".....#.......................................#.......#........#..............#.........#................#...#...#.................";
            //string lastline = "......#...";
            for (int i = 0; i < lastline.Length; i++)
            {
                map[i,0] = lastline[i];
            }
            m_n = n;
            m_Map = map;
        }
        public int star1()
        {
            int x = 0;
            int y = 0;
            List<(int, int)> visited = new List<(int, int)>();
            int angle = 0;
            int output = 0;
            for(int i = 0; i < m_n; i++)
            {
                for (int j = 0; j < m_n ; j++)
                {
                    {
                        if (m_Map[i,j] == '^' )
                        {
                            x = i;
                            y = j;
                            m_Map[x, y] = '.';
                            visited.Add((x,y));
                            m_start = (x, y);
                        }
                    }
                }
            }
            while (x > 0 && x < m_n - 1 && y > 0 && y < m_n -1)
            {
                if (angle == 0)
                {
                    if (m_Map[x, y + 1] == '.')
                    {
                        y++;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else if (angle == 90)
                {

                    if (m_Map[x + 1, y] == '.')
                    {
                        x++;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else if (angle == 180)
                {
                    if (m_Map[x, y - 1] == '.')
                    {
                        y--;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else
                {
                    if (m_Map[x - 1, y] == '.')
                    {
                        x--;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle = 0;
                    }
                }
            }
            return visited.Count;
        }
        public int star2()
        {
            int output = 0;
            for (int i = 0; i < m_n; i++)
            {
                for (int j = 0; j < m_n; j++)
                {
                    if ((i, j) != m_start && m_Map[i,j] != '#')
                    {
                        char[,] adjustedmap = m_Map;
                        adjustedmap[i, j] = '#';
                        adjustedmap[m_start.Item1, m_start.Item2] = '^';
                        if(Loop(adjustedmap) == true)
                        {
                            output++;
                        }
                        adjustedmap[i, j] = '.';
                        m_Map[i, j] = '.';
                    }
                }
            }
            return output;
        }
        public bool Loop(char[,] adjustedmap)
        {
            int x = 0;
            int y = 0;
            List<(int, int)> visited = new List<(int, int)>();
            int angle = 0;
            int output = 0;
            int count = 0;
            for (int i = 0; i < m_n; i++)
            {
                for (int j = 0; j < m_n; j++)
                {
                    {
                        if (adjustedmap[i, j] == '^')
                        {
                            x = i;
                            y = j;
                            adjustedmap[x, y] = '.';
                            visited.Add((x, y));
                            m_start = (x, y);
                        }
                    }
                }
            }
            while (x > 0 && x < m_n - 1 && y > 0 && y < m_n - 1 && count < 10000)
            {
                count++;
                if (angle == 0)
                {
                    if (adjustedmap[x, y + 1] == '.')
                    {
                        y++;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else if (angle == 90)
                {

                    if (adjustedmap[x + 1, y] == '.')
                    {
                        x++;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else if (angle == 180)
                {
                    if (adjustedmap[x, y - 1] == '.')
                    {
                        y--;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle += 90;
                    }
                }
                else
                {
                    if (adjustedmap[x - 1, y] == '.')
                    {
                        x--;
                        if (!visited.Contains((x, y)))
                        {
                            visited.Add((x, y));
                        }
                    }
                    else
                    {
                        angle = 0;
                    }
                }
            }
            if(count >= 10000)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
